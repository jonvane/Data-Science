windows()
?Devices
library(datasets)
faithful
View(faithful)
with(faithful,plot(eruptions,waiting)) ## Make plot appear on screen device
title(main="Old Faithful Geyser data") ## Annotate with a title
getwd()
setwd("~/GitHub/Data-Science")
getwd()
pdf(file="myplot.pdf") ## Open PDF device; create 'myplot.pdf' in my working directory
## Create plot and send to a file (no plot appears on screen)
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data") ## Annotate plot; still nothing on screen
dev.off() ## Close the PDF file device
## Now you can view the file 'myplot.pdf' on your computer
dev.cur()
library(datasets)
with(faithful,plot(eruptions,waiting))  ## Create plot on screen device
title(main="Old Faithful Geyser data") ## Add a main title
dev.copy(png,file="geyserplot.png") ## Copy my plot to a PNG file
dev.off() ## Don't forget to close the PNG device!
dev.copy2pdf(file="myplot2.pdf")
dev.off()
with(faithful,plot(eruptions,waiting))  ## Create plot on screen device
title(main="Old Faithful Geyser data") ## Add a main title
dev.copy(png,file="geyserplot.png") ## Copy my plot to a PNG file
dev.off() ## Don't forget to close the PNG device!
dev.copy2pdf(file="myplot2.pdf")
dev.off()
dev.copy2pdf(pdf,file="myplot2.pdf")
dev.off()
with(faithful,plot(eruptions,waiting))  ## Create plot on screen device
title(main="Old Faithful Geyser data") ## Add a main title
dev.copy2pdf(pdf,file="myplot2.pdf")
dev.off()
with(faithful,plot(eruptions,waiting))  ## Create plot on screen device
title(main="Old Faithful Geyser data") ## Add a main title
dev.copy2pdf(file="myplot2.pdf")
dev.off()
library(lattice)
library(grid)
library(lattice)
library(lattice)
library(datasets)
## Simple scatterplot
xyplot(Ozone~Wind,data=airquality)
airquality <- transform(airquality,Month=factor(Month))
xyplot(Ozone~Wind | Month,data=airquality,layout=c(5,1))
p <- xyplot(Ozone~Wind,data=airquality) ## Nothing happens!
print(p)
xyplot(Ozone~Wind,data=airquality)
?set.seed
?for
Sys.Date
Sys.Date()
set.seed(10)
x <- rnorm(10)
f <- rep(0:1,each=50)
y <- x+f-f*x+rnorm(100,sd=0.5)
f <- factor(f,labels=c("Group 1","Group 2"))
xyplot(y~x|f,layout=c(2,1))  ## Plot with 2 panels
library(lattice)
set.seed(10)
x <- rnorm(10)
f <- rep(0:1,each=50)
y <- x+f-f*x+rnorm(100,sd=0.5)
f <- factor(f,labels=c("Group 1","Group 2"))
xyplot(y~x|f,layout=c(2,1))  ## Plot with 2 panels
set.seed(10)
x <- rnorm(100)
f <- rep(0:1,each=50)
y <- x+f-f*x+rnorm(100,sd=0.5)
f <- factor(f,labels=c("Group 1","Group 2"))
xyplot(y~x|f,layout=c(2,1))  ## Plot with 2 panels
xyplot(y~x|f,panel=function(x,y,...){
panel.xyplot(x,y,...) ## First call the default panel function for 'xyplot'
panel.abline(h=median(y),lty=2) ## Add a horizontal line at the median
})
## Lattice Plotting System
## Part 1
library(lattice)
## Lattice Functions
xyplot
bwplot
histogram
stripplot
dotplot
splom
levelplot, contourplot
xyplot(y ~ x | f * g, data) ## The tilde is read as "is modeled as a function of."
## Simple Lattice Plot
library(lattice)
library(datasets)
## Simple scatterplot
xyplot(Ozone~Wind,data=airquality)
library(lattice)
library(datasets)
## Convert 'Month' to a factor variable
airquality <- transform(airquality,Month=factor(Month))
xyplot(Ozone~Wind | Month,data=airquality,layout=c(5,1))
## Lattice Behavior
p <- xyplot(Ozone~Wind,data=airquality) ## Nothing happens!
print(p) ## Plot appears
xyplot(Ozone~Wind,data=airquality) ## Auto-printing
## Latice Plotting System (part 2)
## Lattice Panel Functions
set.seed(10)
x <- rnorm(100)
f <- rep(0:1,each=50)
y <- x+f-f*x+rnorm(100,sd=0.5)
f <- factor(f,labels=c("Group 1","Group 2"))
xyplot(y~x|f,layout=c(2,1))  ## Plot with 2 panels
## Custom panel function
xyplot(y~x|f,panel=function(x,y,...){
panel.xyplot(x,y,...) ## First call the default panel function for 'xyplot'
panel.abline(h=median(y),lty=2) ## Add a horizontal line at the median
})
xyplot(y~x|f,panel=function(x,y,...){
panel.xyplot(x,y,...) ## First call the default panel function for 'xyplot'
panel.abline(h=median(y),lty=2) ## Add a horizontal line at the median
})
xyplot(y~x|f,panel=function(x,y,...){
panel.xyplot(x,y,...) ## First call default panel function
panel.lmline(x,y,col=2) ## Overlay a simple linear regression line
})
log2(2)
log2(4)
xyplot(y~x|f,panel=function(x,y,...){
panel.xyplot(x,y,...) ## First call default panel function
panel.lmline(x,y,col=2) ## Overlay a simple linear regression line
})
install.packages("ggplot2")
